// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using logs_API.Data;

#nullable disable

namespace logs_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220816091946_CreateInitial")]
    partial class CreateInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DbProjectDbUser", b =>
                {
                    b.Property<int>("ProjectsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("ProjectsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("DbProjectDbUser");
                });

            modelBuilder.Entity("logs_API.Models.LogModels.Database.DbLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("LogTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Timestamp")
                        .HasColumnType("int");

                    b.Property<int>("UserJourneyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LogTypeId");

                    b.HasIndex("UserJourneyId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("logs_API.Models.LogModels.Database.DbLogType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<bool>("SendImmediately")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("logs_API.Models.LogModels.Database.DbProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("logs_API.Models.LogModels.Database.DbUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("logs_API.Models.LogModels.Database.DbUserJourney", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Timestamp")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserJourneys");
                });

            modelBuilder.Entity("DbProjectDbUser", b =>
                {
                    b.HasOne("logs_API.Models.LogModels.Database.DbProject", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("logs_API.Models.LogModels.Database.DbUser", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("logs_API.Models.LogModels.Database.DbLog", b =>
                {
                    b.HasOne("logs_API.Models.LogModels.Database.DbLogType", "LogType")
                        .WithMany("Logs")
                        .HasForeignKey("LogTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("logs_API.Models.LogModels.Database.DbUserJourney", "UserJourney")
                        .WithMany("DbLogs")
                        .HasForeignKey("UserJourneyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogType");

                    b.Navigation("UserJourney");
                });

            modelBuilder.Entity("logs_API.Models.LogModels.Database.DbLogType", b =>
                {
                    b.HasOne("logs_API.Models.LogModels.Database.DbProject", "Project")
                        .WithMany("LogTypes")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("logs_API.Models.LogModels.Database.DbLogType", b =>
                {
                    b.Navigation("Logs");
                });

            modelBuilder.Entity("logs_API.Models.LogModels.Database.DbProject", b =>
                {
                    b.Navigation("LogTypes");
                });

            modelBuilder.Entity("logs_API.Models.LogModels.Database.DbUserJourney", b =>
                {
                    b.Navigation("DbLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
